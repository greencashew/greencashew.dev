<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Genetic Algorithm on Jan Górkiewicz - Programmer Technical Blog</title><link>https://greencashew.dev/tags/genetic-algorithm/</link><description>Recent content in Genetic Algorithm on Jan Górkiewicz - Programmer Technical Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 15 Jun 2020 10:51:20 +0100</lastBuildDate><atom:link href="https://greencashew.dev/tags/genetic-algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>Schema Theorem - Why Genetic Algorithm is working?</title><link>https://greencashew.dev/posts/schema-theorem-why-genetic-algorithm-is-working/</link><pubDate>Mon, 15 Jun 2020 10:51:20 +0100</pubDate><guid>https://greencashew.dev/posts/schema-theorem-why-genetic-algorithm-is-working/</guid><description>Overview Theorem explains why the GA is working. Schema - a template that identifies a subset of strings with similarities at certain string position. * the wildcard means 0 or 1 (Doesn&amp;rsquo;t matter) S1 = (*01*00110) - this schema is represented by 4 strings (only changes filled): V1 = (0 0 ) V2 = (0 1 ) V3 = (1 0 ) V4 = (1 1 ) Schema Order o(S) is defined as the number of fixed positions in the template: S1 = (*1***1**0) o(S1) = 3 S2 = (*1**01*111) o(S2) = 6 Schema Length δ(S) is the distance between first and last fixed position.</description></item></channel></rss>